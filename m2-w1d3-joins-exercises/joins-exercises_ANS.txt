Meet with John on 6/21/18 in am to review number 16.
-- The following queries utilize the "dvdstore" database.

-- 1. All of the films that Nick Stallone has appeared in
-- (30 rows)
		SELECT a.* 
		FROM actor a
		WHERE a.first_name= 'Nick' AND a.last_name = 'Stallone'
--step 1 = actor_id 44

		SELECT a.* 
		FROM actor a
		JOIN film_actor fa ON a.actor_id = fa.actor_id 
		WHERE a.first_name= 'Nick' AND a.last_name = 'Stallone'
--step 2 = actor and film ID joined

		SELECT a.*, fa.*, f.*
		FROM actor a
		JOIN film_actor as fa ON a.actor_id = fa.actor_id 
		JOIN film as f ON fa.film_id = f.film_id
		WHERE a.first_name= 'Nick' AND a.last_name = 'Stallone' 
--step 3 = pull in another join table

		SELECT f.*
		FROM actor a
		JOIN film_actor as fa ON a.actor_id = fa.actor_id 
		JOIN film as f ON fa.film_id = f.film_id
		WHERE a.first_name= 'Nick' AND a.last_name = 'Stallone' 
--final step remove from select statement = fa.*, a.*

		SELECT f.*, (actor.first_name + ' ' +  actor.last_name) AS 'Nick Stallone' 
		FROM film f 
		JOIN film_actor ON film_actor.film_id = f.film_id
		JOIN actor ON actor.actor_id = film_actor.actor_id
		WHERE actor.actor_id=44

--Another option ??


-- 2. All of the films that Rita Reynolds has appeared in
-- (20 rows)

		SELECT f.*, (actor.first_name + ' ' +  actor.last_name) AS  'Rita Reynolds' 
		FROM film f 
		JOIN film_actor ON film_actor.film_id = f.film_id
		JOIN actor ON actor.actor_id = film_actor.actor_id
		WHERE actor.actor_id=135

-- 3. All of the films that Judy Dean or River Dean have appeared in
-- (46 rows)

		SELECT f.*, (actor.first_name + ' ' +  actor.last_name) AS  'Actors by Name of Dean' 
		FROM film f
		JOIN film_actor as fa ON fa.film_id = f.film_id
		JOIN actor ON actor.actor_id = fa.actor_id
		--WHERE a.first_name= 'Judy' OR  a.first_name= 'River'  AND a.last_name = 'Dean'
		WHERE actor.actor_id=35 OR actor.actor_id=143

-- 4. All of the the ‘Documentary’ films
-- (68 rows)
		SELECT f.*
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Documentary'


-- 5. All of the ‘Comedy’ films
-- (58 rows)

		SELECT f.*
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Comedy'

-- 6. All of the ‘Children’ films that are rated ‘G’
-- (10 rows)
		SELECT f.*
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Children' AND f.rating = 'G'

-- 7. All of the ‘Family’ films that are rated ‘G’ and are less than 2 hours in length
-- (3 rows)

		SELECT f.*
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Family' AND f.rating = 'G'AND f.length < 120

-- 8. All of the films featuring actor Matthew Leigh that are rated ‘G’
-- (9 rows)
	
		SELECT f.*
		FROM actor a
		JOIN film_actor as fa ON a.actor_id = fa.actor_id 
		JOIN film as f ON fa.film_id = f.film_id
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE a.actor_id = 103 AND f.rating = 'G'

-- 9. All of the ‘Sci-Fi’ films released in 2006
-- (61 rows)

		SELECT f.*
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Sci-Fi' AND f.release_year = 2006

-- 10. All of the ‘Action’ films starring Nick Stallone
-- (2 rows)

		SELECT f.*
		FROM actor a
		JOIN film_actor as fa ON a.actor_id = fa.actor_id 
		JOIN film as f ON fa.film_id = f.film_id
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE a.actor_id=44 AND c.name  = 'Action'

-- 11. The address of all stores, including street address, city, district, and country
-- (2 rows)

		SELECT (a.address + ' ' + c.city + ' ' + a.district + ' ' + co.country) as 'Store Location'
		from store s 
		JOIN address as a ON a.address_id = s.address_id
		JOIN city as c ON c.city_id = a.city_id
		JOIN country as co ON co.country_id = c.country_id

-- 12. A list of all stores by ID, the store’s street address, and the name of the store’s manager
-- (2 rows)

		SELECT s.store_id AS 'ID', a.address AS 'Store Location', (sff.first_name + ' ' + sff.last_name) as 'Manager Name'
		from store s 
		JOIN address as a ON a.address_id = s.address_id
		JOIN staff as sff ON sff.store_id = s.store_id


-- 13. The first and last name of the top ten customers ranked by number of rentals 
-- (#1 should be “ELEANOR HUNT” with 46 rentals, #10 should have 39 rentals)

		SELECT top 10 (c.first_name+' '+c.last_name) AS customer_name,count(r.rental_id) 
		FROM store s
		JOIN inventory inv ON inv.store_id=s.store_id
		JOIN rental r ON r.inventory_id=inv.inventory_id
		JOIN customer c ON c.customer_id=r.customer_id
		GROUP BY (c.first_name+' '+c.last_name)
		ORDER BY count(r.rental_id) DESC

-- 14. The first and last name of the top ten customers ranked by dollars spent 
-- (#1 should be “KARL SEAL” with 221.55 spent, #10 should be “ANA BRADLEY” with 174.66 spent)

		SELECT top 10 (c.first_name+' '+c.last_name) AS customer_name,sum(p.amount) 
		FROM customer c
		JOIN payment p ON c.customer_id=p.customer_id
		GROUP BY (c.first_name+' '+c.last_name)
		ORDER BY sum(p.amount) DESC

-- 15. The store ID, street address, total number of rentals, total amount of sales (i.e. payments), and average sale of each store 
-- (Store 1 has 7928 total rentals and Store 2 has 8121 total rentals)

		SELECT s.store_id AS STORE_id, a.address as STREET_ADDRESS, count(r.rental_id) AS RENTAL_count, sum(p.amount) AS SALE_total, AVG(p.amount) AS SALE_avg 
		FROM store s
		JOIN address as a ON a.address_id = s.address_id
		JOIN inventory as inv ON inv.store_id = s.store_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		JOIN payment as p ON p.rental_id= r.rental_id
		GROUP BY s.store_id,a.address

-- 16. The top ten film titles by number of rentals
-- (#1 should be “BUCKET BROTHERHOOD” with 34 rentals and #10 should have 31 rentals)
		SELECT top 10 f.title AS title, count(r.rental_id) AS rental_count
		FROM film f
		JOIN inventory as inv ON inv.film_id = f.film_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		GROUP BY f.title
		ORDER BY count(r.rental_id) DESC


-- 17. The top five film categories by number of rentals 
-- (#1 should be “Sports” with 1179 rentals and #5 should be “Family” with 1096 rentals)
		
		SELECT top 5 c.name, count(r.rental_id) as rental_count 
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		JOIN inventory as inv ON inv.film_id = f.film_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		GROUP BY c.name
		ORDER BY count(r.rental_id) DESC

-- 18. The top five Action film titles by number of rentals 
-- (#1 should have 30 rentals and #5 should have 28 rentals)
		
		SELECT top 5 f.title,count(r.rental_id) as rental_count 
		FROM film f
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		JOIN inventory as inv ON inv.film_id = f.film_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		WHERE c.name  = 'Action'
		GROUP BY f.title
		ORDER BY count(r.rental_id) DESC


-- 19. The top 10 actors ranked by number of rentals of films starring that actor 
-- (#1 should be “GINA DEGENERES” with 753 rentals and #10 should be “SEAN GUINESS” with 599 rentals)

		SELECT top 10 (a.first_name + ' ' +  a.last_name) as Name_Actor_Actress, count(r.rental_id) as rental_count
		FROM actor a
		JOIN film_actor as fa ON fa.actor_id = a.actor_id
		JOIN film as f ON f.film_id = fa.film_id
		JOIN inventory as inv ON inv.film_id = f.film_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		GROUP BY a.first_name, a.last_name
		ORDER BY count(r.rental_id) DESC


-- 20. The top 5 “Comedy” actors ranked by number of rentals of films in the “Comedy” category starring that actor 
-- (#1 should have 87 rentals and #5 should have 72 rentals)
		SELECT top 5 (a.first_name + ' ' +  a.last_name) as Name_Actor_Actress, count(r.rental_id) as rental_count
		FROM actor a
		JOIN film_actor as fa ON fa.actor_id = a.actor_id
		JOIN film as f ON f.film_id = fa.film_id
		JOIN inventory as inv ON inv.film_id = f.film_id
		JOIN rental as r ON r.inventory_id = inv.inventory_id
		JOIN film_category as fc ON fc.film_id = f.film_id
		JOIN category as c ON c.category_id = fc.category_id
		WHERE c.name = 'Comedy'
		GROUP BY a.first_name, a.last_name
		ORDER BY count(r.rental_id) DESC
